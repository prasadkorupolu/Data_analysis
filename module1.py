# -*- coding: utf-8 -*-
"""module1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1g1B2A91s2HgjXFpPba5EOMG308grr4AV
"""

import numpy as np
arr = np.array([1,2,3,4,5])
print(arr)

a=np.zeros((3,3),dtype=int)
print(a)
b=np.ones((3,3),dtype=int)
print(b)
c=np.arange(10)
print(c)
reshaped_arr=arr.reshape(5,1)
print(reshaped_arr)
sliced_arr=arr[2:4]
print(sliced_arr)







arr1=np.array([1,2,3,4])
arr2=np.array([6,7,8,9])
add=(arr1+arr2) #elementary operations
print(add)
print(arr1+3) #broadcasting

#vertical
arr1=np.array([1,2,3,4])
arr2=np.array([6,7,8,9])
stack=np.vstack(arr1+arr2)
print(stack)

#horizantal
arr1=np.array([1,2,3,4])
arr2=np.array([6,7,8,9])
stack=np.stack(arr1+arr2)
print(stack)

arr1=np.array([1,2,3,4,5,6])
arr2=np.split(arr1,2)
print(arr2)

arr1=np.array([[1,2,3],[4,5,6]])
arr2=arr1.T
print(arr1)
print(arr2)



a=np.array([[1,2,4],[3,4,5]])
b=np.sum(a, axis=0)
c=np.sum(a, axis=1)
print(b)
print(c)

a=np.array([1,2,3,4,5])
mean=np.mean(a)
median=np.median(a)
var=np.var(a) #variance
std=np.std(a)  #standard deviation
print(mean)
print(median)
print(var)
print(std)

data=np.loadtxt("/content/py.txt",dtype=int)
d=np.savetxt("/content/pyy.txt",data)
print(d)
print(data)

import matplotlib.pyplot as plt
a=np.array([1,2,3,4,5])
plt.plot(a)

import pandas as pd
a=["ram","ramya","durga","lahari","sunny","divya"]
r=pd.series(a,index=[1,2,3,4,5,6])

df=pd.read_csv("/content/disasters.csv")
#print(df)
print(df.loc[1])



df=pd.read_csv("/content/remo.txt",sep="  ")
print(df)
dfn.head(5)

print(df)
print(df.loc[2])

dfn=pd.read_excel("/content/file.xlsx")
mv =dfn['Age'].mean()
dfn=dfn.fillna(mv)
print(mv)
dfnn=dfn.drop_duplicates()
print(dfnn)

from google.colab import drive
drive.mount('/content/drive')

df=pd.read_csv("/content/black.txt")
df.shape
df2=df.head(10)
df1=df.tail(10)
manual=pd.concat([df2,df1],axis=0)
d=manual.to_csv("manual_testing.csv")
#print(d)
print(d.groupby(['CSE101']),['Enrollment'].count())

pd.read_csv("/content/manual_testing.csv")
#print(d.groupby(['1']),['Enrollment'].count())

import numpy as np
import matplotlib.pyplot as plt
runs=np.array([100,50,91,78,89,25,34,19,9,10])
w=np.array([1,0,2,0,3,7,8,9,7,5])
plt.plot(runs,w,color='pink')
plt.title('indvsAus_score')
plt.show()

tigar=np.linspace(-2*np.pi,2*np.pi,50)
print(tigar)
plt.plot(tigar,np.sin(tigar),color='black')
plt.title("sin(x)")
plt.show()

overs=np.arange(5,50,5)
overs_a=np.arange(5,30,5)
runs_i=np.array([25,51,84,131,160,189,220,250,267])
runs_a=np.array([15,41,94,110,151])
wickets=np.array([12,32,96])
plt.subplot(2,1,2)
plt.plot(overs,runs_i,color='blue',label='india')
plt.subplot(2,1,1#)
plt.plot(overs_a,runs_a,color='yellow',label='Aus')
#plt.legend(loc='best')
plt.show()

a=[230,560,780,127,128]
b=[200,160,270,127,400]
years=[1,2,3,4]
profit_a=[(a[i]-a[i-1]) for i in range(1,len(a))]
profit_b=[(b[i]-b[i-1]) for i in range(1,len(b))]
plt.subplot(2,1,2)
plt.plot(years,profit_a,color='hotpink',linewidth='3',label='companyA',marker='>',ms='20',mec='c')
plt.subplot(2,1,1)
plt.plot(years,profit_b,color='black',linestyle='dotted',label='companyB',marker='H')
plt.show()

a=np.array([25,60,5,10])
labe=["AIML","Python","Pandas","Numpy"]
plt.pie(a,labels=labe)
plt.show()

a=np.array([25,60,5,10])
labe=["AIML","Python","Pandas","Numpy"]
colors=["yellow","hotpink","black","blue"]
explo=[0,0,1,0]
plt.pie(a,labels=labe,explode=explo,startangle=180,colors=colors)
plt.show()

a = np.array([25, 60, 5, 10])
labels = ["AIML", "python", "Pandas", "Numpy"]
c=['pink','blue','purple','grey']
explode = [0.2, 0, 0, 0]
plt.pie(a, labels=labels,colors=c, explode=explode, startangle=180, textprops={'fontsize':20})
plt.show()

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
df=pd.read_excel("/content/Book 5.xlsx")
mean=df['temperature'].mean()
print(mean)
min=df['temperature'].min()
print(min)
max=df['temperature'].max()
print(max)
treshold=32
no_days=df[df['temperature']>treshold].shape[0]
print(no_days)
date=df['date']
temperature=df['temperature']
plt.plot(date,temperature,color='black',linewidth='1',marker='.',)
x=np.array([max,min])
p=df.loc[df['temperature'].idxmax(),'date']
m=df.loc[df['temperature'].idxmin(),'date']
y=np.array([p,m])
plt.scatter(y,x,color='red')
plt.show()

import seaborn as sns
import matplotlib.pyplot as plt
#tips = pd.read_excel("/content/Book 5.xlsx")
tips=sns.load_dataset("tips")
sns.scatterplot(x="total_bill",y="tip",data=tips)
plt.title("scatter plot of bill vs .tip")
plt.xlabel("total_bill($)")
plt.ylabel("tip ($)")
plt.show()

import seaborn as sns
import matplotlib.pyplot as plt
#tips = pd.read_excel("/content/Book 5.xlsx")
irs=sns.load_dataset("iris")
sns.scatterplot(x="sepal_length",y="petal_length",data=iris)
plt.title("scatter plot of sepal vs .petal")
plt.xlabel("sepal_length($)")
plt.ylabel("petal_length ($)")
plt.show()

iris=sns.load_dataset("iris")
print(iris)

import seaborn as sns
import matplotlib.pyplot as plt
tips=sns.load_dataset("tips")
sns.violinplot(x="day",y="total_bill",data=tips)
plt.title("distribution of total bill by day")
plt.xlabel("day of the week($)")
plt.ylabel("total_bill ($)")
plt.show()

import seaborn as sns
import matplotlib.pyplot as plt

# Load the anscombe dataset
anscombe = sns.load_dataset("anscombe")

# Display the first few rows of the dataset to understand its structure
print(anscombe.head())

# Plot the four datasets in the anscombe dataset
sns.set(style="ticks")
sns.lmplot(x="x", y="y", col="dataset", hue="dataset", data=anscombe,
           col_wrap=2, ci=None, palette="muted", height=4,
           scatter_kws={"s": 50, "alpha": 1})
plt.show()

import seaborn as sns
import matplotlib.pyplot as plt
iris=sns.load_dataset("iris")
print(iris)
correlation_matrix=iris.corr()
sns.heatmap(correlation_matrix,annot=True,cmap="coolwarm")
plt.title("correlation heatmap of iris dataset")
plt.show()

import seaborn as sns
import matplotlib.pyplot as plt
titanic=sns.load_dataset("titanic")
print(titanic)
correlation_matrix=titanic.corr()
sns.heatmap(correlation_matrix,annot=True,cmap="coolwarm")
plt.title("correlation heatmap of titanic dataset")
plt.show()

df=pd.read_csv("/content/sample_data/mnist_test.csv",sep="  ")
print(df)